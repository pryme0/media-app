[{"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\index.tsx":"1","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\containers\\App.tsx":"2","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\services\\api.ts":"3","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\store\\actionTypes.ts":"4","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\containers\\Auth.tsx":"5","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\DashboardRoute\\DashboardRoute.tsx":"6","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Index\\Index.tsx":"7","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\FlashMessage\\FlashMessage.tsx":"8","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\Streams.tsx":"9","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\ConnectSocial\\ConnectSocialStep.tsx":"10","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\store\\index.ts":"11","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\store\\actions\\auth.ts":"12","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Auth\\styles.ts":"13","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Index\\styles.ts":"14","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\store\\actions\\socialAccounts.ts":"15","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\styles.ts":"16","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\services\\socket.ts":"17","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Auth\\AuthForm.tsx":"18","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\containers\\OAuth.tsx":"19","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\Main.tsx":"20","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\Tabs\\TabPanel.tsx":"21","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\AddProfileBar\\AddProfileBar.tsx":"22","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\services\\config.ts":"23","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Auth\\Input.tsx":"24","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Auth\\CheckboxInput.tsx":"25","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\AddProfileBar\\style.ts":"26","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\styles\\Layout.styles.ts":"27","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\AppBar.tsx":"28","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\Sidebar.tsx":"29","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\Drawer.tsx":"30","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\store\\reducers\\index.ts":"31","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\styles\\constants.ts":"32","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\StyledMenu.tsx":"33","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\SwipeDrawer.tsx":"34","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\store\\reducers\\socialAccounts.ts":"35","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\store\\reducers\\auth.ts":"36","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\DrawerContent.tsx":"37","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\PermanentDrawer.tsx":"38","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\Stream\\Stream.tsx":"39","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\StreamNavs\\TwitterStreamNav.tsx":"40","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\StreamNavs\\styles\\StreamNav.styles.ts":"41","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\constants.ts":"42"},{"size":491,"mtime":1612440223375,"results":"43","hashOfConfig":"44"},{"size":2055,"mtime":1612520826479,"results":"45","hashOfConfig":"44"},{"size":698,"mtime":1612440223377,"results":"46","hashOfConfig":"44"},{"size":322,"mtime":1612440223378,"results":"47","hashOfConfig":"44"},{"size":4192,"mtime":1612440223370,"results":"48","hashOfConfig":"44"},{"size":613,"mtime":1612440223314,"results":"49","hashOfConfig":"44"},{"size":3450,"mtime":1612440223352,"results":"50","hashOfConfig":"44"},{"size":2094,"mtime":1612440223351,"results":"51","hashOfConfig":"44"},{"size":4350,"mtime":1612521477195,"results":"52","hashOfConfig":"44"},{"size":4436,"mtime":1612440223313,"results":"53","hashOfConfig":"44"},{"size":708,"mtime":1612440223380,"results":"54","hashOfConfig":"44"},{"size":1335,"mtime":1612440223379,"results":"55","hashOfConfig":"44"},{"size":1671,"mtime":1612440223312,"results":"56","hashOfConfig":"44"},{"size":1383,"mtime":1612440223353,"results":"57","hashOfConfig":"44"},{"size":655,"mtime":1612440223379,"results":"58","hashOfConfig":"44"},{"size":1112,"mtime":1612531138904,"results":"59","hashOfConfig":"44"},{"size":202,"mtime":1612518015389,"results":"60","hashOfConfig":"44"},{"size":4200,"mtime":1612440223310,"results":"61","hashOfConfig":"44"},{"size":3525,"mtime":1612440223370,"results":"62","hashOfConfig":"44"},{"size":1596,"mtime":1612440223357,"results":"63","hashOfConfig":"44"},{"size":739,"mtime":1612440223368,"results":"64","hashOfConfig":"44"},{"size":888,"mtime":1612440223365,"results":"65","hashOfConfig":"44"},{"size":58,"mtime":1612440223377,"results":"66","hashOfConfig":"44"},{"size":1892,"mtime":1612440223311,"results":"67","hashOfConfig":"44"},{"size":1115,"mtime":1612440223311,"results":"68","hashOfConfig":"44"},{"size":2013,"mtime":1612518615752,"results":"69","hashOfConfig":"44"},{"size":5210,"mtime":1612440223363,"results":"70","hashOfConfig":"44"},{"size":4476,"mtime":1612440223355,"results":"71","hashOfConfig":"44"},{"size":1771,"mtime":1612440223360,"results":"72","hashOfConfig":"44"},{"size":1148,"mtime":1612440223356,"results":"73","hashOfConfig":"44"},{"size":247,"mtime":1612440223381,"results":"74","hashOfConfig":"44"},{"size":148,"mtime":1612440223363,"results":"75","hashOfConfig":"44"},{"size":5970,"mtime":1612440223361,"results":"76","hashOfConfig":"44"},{"size":2793,"mtime":1612440223362,"results":"77","hashOfConfig":"44"},{"size":803,"mtime":1612440223381,"results":"78","hashOfConfig":"44"},{"size":672,"mtime":1612440223381,"results":"79","hashOfConfig":"44"},{"size":6180,"mtime":1612440223356,"results":"80","hashOfConfig":"44"},{"size":1482,"mtime":1612440223359,"results":"81","hashOfConfig":"44"},{"size":372,"mtime":1612525902153,"results":"82","hashOfConfig":"44"},{"size":2128,"mtime":1612525647867,"results":"83","hashOfConfig":"44"},{"size":1132,"mtime":1612529303346,"results":"84","hashOfConfig":"44"},{"size":148,"mtime":1612529245810,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"zigi1i",{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"88"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"88"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\index.tsx",[],["190","191"],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\containers\\App.tsx",["192"],"import React, { useEffect } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport Auth from \"./Auth\";\r\nimport { configureStore } from \"../store\";\r\nimport DashboardRoute from \"../components/DashboardRoute/DashboardRoute\";\r\nimport Index from \"../components/Index/Index\";\r\nimport Streams from \"../components/Streams/Streams\";\r\nimport { setAuthorizationToken } from \"../services/api\";\r\nimport { LOGOUT } from \"../store/actionTypes\";\r\nimport FlashMessage from \"../components/FlashMessage/FlashMessage\";\r\nimport ConnectSocialStep from \"../components/ConnectSocial/ConnectSocialStep\";\r\nimport withAuth from \"../HOCS/withAuth\";\r\n\r\nconst store = configureStore();\r\n\r\nfunction App() {\r\n    useEffect(() => {\r\n        if (localStorage.accessToken) {\r\n            setAuthorizationToken(localStorage.accessToken);\r\n            try {\r\n                store.dispatch({\r\n                    type: \"AUTH\",\r\n                    user: jwtDecode(localStorage.accessToken),\r\n                });\r\n            } catch (err) {\r\n                store.dispatch({ type: LOGOUT });\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <FlashMessage />\r\n                <Switch>\r\n                    <Route exact path=\"/signin\" component={Auth} />\r\n                    <Route\r\n                        exact\r\n                        path=\"/signup\"\r\n                        render={() => <Auth isSignup={true} />}\r\n                    />\r\n                    <DashboardRoute exact component={Index} path=\"/\" />\r\n                    <DashboardRoute exact component={Streams} path=\"/streams\" />\r\n                    <Route\r\n                        exact\r\n                        path=\"/connect-social-one\"\r\n                        component={ConnectSocialStep}\r\n                    />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\services\\api.ts",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\store\\actionTypes.ts",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\containers\\Auth.tsx",["193"],"import React from \"react\";\r\nimport { Button, Container, Paper, Typography } from \"@material-ui/core\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { auth } from \"../store/actions/auth\";\r\nimport AuthForm from \"../components/Auth/AuthForm\";\r\nimport logoText from \"../assets/icons/logo-text.svg\";\r\nimport useStyles from \"../components/Auth/styles\";\r\nimport { ChevronLeft } from \"@material-ui/icons\";\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface Props {\r\n    isSignup?: boolean;\r\n}\r\n\r\nconst validateSignup = Yup.object({\r\n    firstName: Yup.string()\r\n        .max(15, \"Must be 15 characters or less\")\r\n        .required(\"FirstName is required\"),\r\n    lastName: Yup.string()\r\n        .max(20, \"Must be 20 characters or less\")\r\n        .required(\"Required\"),\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    password: Yup.string()\r\n        .min(6, \"Password must be at least 6 charaters\")\r\n        .required(\"Password is required\"),\r\n    confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref(\"password\"), null], \"Password must match\")\r\n        .required(\"Confirm password is required\"),\r\n    agreeToTerms: Yup.bool().oneOf(\r\n        [true],\r\n        \"Accept Terms & Conditions is required\"\r\n    ),\r\n});\r\n\r\nconst validateLogin = Yup.object({\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n});\r\n\r\nconst initialValuesSignup = {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    agreeToTerms: false,\r\n};\r\n\r\nconst initialValuesLogin = {\r\n    email: \"\",\r\n    password: \"\",\r\n    rememberMe: true,\r\n};\r\n\r\nconst Auth = ({ isSignup }: Props) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const action = isSignup ? \"signup\" : \"login\";\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={isSignup ? initialValuesSignup : initialValuesLogin}\r\n            validationSchema={isSignup ? validateSignup : validateLogin}\r\n            onSubmit={(values, actions) => {\r\n                console.log(values);\r\n                dispatch(auth(values, history, action, actions));\r\n            }}\r\n        >\r\n            <Container component=\"main\" maxWidth=\"lg\">\r\n                <Button\r\n                    variant=\"text\"\r\n                    className={classes.backButton}\r\n                    color=\"primary\"\r\n                >\r\n                    <a href=\"/\">\r\n                        <FontAwesomeIcon\r\n                            className={classes.backIcon}\r\n                            icon={faChevronLeft}\r\n                        />\r\n                        Back to home\r\n                    </a>\r\n                </Button>\r\n\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <Paper className={classes.paper} elevation={3}>\r\n                        <img src={logoText} alt=\"Buzzroom logo\" />\r\n                        <Typography className={classes.heading} variant=\"h3\">\r\n                            {isSignup\r\n                                ? \"Let's get your account set up\"\r\n                                : \"Welcome Back\"}\r\n                        </Typography>\r\n                        <Typography\r\n                            className={classes.caption}\r\n                            variant=\"caption\"\r\n                        >\r\n                            To keep you connected with us please login with your\r\n                            personal information by email address and password\r\n                        </Typography>\r\n                        <Typography variant=\"h5\">\r\n                            {isSignup ? \"Sign Up\" : \"Sign In\"}\r\n                        </Typography>\r\n                        <AuthForm isSignup={isSignup} />\r\n                    </Paper>\r\n                </Container>\r\n            </Container>\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\DashboardRoute\\DashboardRoute.tsx",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Index\\Index.tsx",["194"],"import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { useStyles } from \"./styles\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faChartBar,\r\n    faChartLine,\r\n    faEnvelopeOpenText,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Index = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <header className={classes.header}>\r\n                <Typography variant=\"h4\">Main Dashboard</Typography>\r\n                <Typography variant=\"caption\">\r\n                    Welcome <span>Lizzy Onoja</span>, everything looks great!\r\n                </Typography>\r\n            </header>\r\n            <Container className={classes.container} maxWidth=\"md\">\r\n                <div className={classes.row}>\r\n                    <div className={classes.card}>\r\n                        <div className={classes.cardIcon}>\r\n                            <FontAwesomeIcon icon={faChartBar} size=\"3x\" />\r\n                        </div>\r\n                        <Typography className={classes.cardText} variant=\"h6\">\r\n                            Monitor Posts and Mentions\r\n                        </Typography>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.cardButton}\r\n                            size=\"large\"\r\n                        >\r\n                            Get Started\r\n                        </Button>\r\n                    </div>\r\n                    <div className={classes.card}>\r\n                        <div className={classes.cardIcon}>\r\n                            <FontAwesomeIcon\r\n                                size=\"3x\"\r\n                                icon={faEnvelopeOpenText}\r\n                            />\r\n                        </div>\r\n                        <Typography variant=\"h6\" className={classes.cardText}>\r\n                            Views all Inbox\r\n                        </Typography>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.cardButton}\r\n                            size=\"large\"\r\n                        >\r\n                            Get Started\r\n                        </Button>\r\n                    </div>\r\n                    <div className={classes.card}>\r\n                        <div className={classes.cardIcon}>\r\n                            <FontAwesomeIcon icon={faChartLine} size=\"3x\" />\r\n                        </div>\r\n                        <Typography className={classes.cardText} variant=\"h6\">\r\n                            Monitor Engagement\r\n                        </Typography>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.cardButton}\r\n                            size=\"large\"\r\n                        >\r\n                            Get Started\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Index;\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\FlashMessage\\FlashMessage.tsx",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\Streams.tsx",["195","196"],"import React, { useEffect, useState } from \"react\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { connect, useDispatch } from \"react-redux\";\r\nimport { getSocialAccounts } from \"../../store/actions/socialAccounts\";\r\nimport TabPanel from \"./Tabs/TabPanel\";\r\nimport { useStyles } from \"./styles\";\r\nimport AddProfileBar from \"./AddProfileBar/AddProfileBar\";\r\nimport Stream from \"./Stream/Stream\";\r\nimport { FixMeLater } from \"../../types\";\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\ninterface IProps {\r\n    socialAccounts: FixMeLater[];\r\n    getSocialAccounts: () => any;\r\n}\r\n\r\nfunction Index({ getSocialAccounts, socialAccounts }: IProps) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        getSocialAccounts().then(() => setLoading(false));\r\n    }, []);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <AddProfileBar />\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    className={classes.tabs}\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"off\"\r\n                    aria-label=\"scrollable auto tabs example\"\r\n                >\r\n                    {isLoading\r\n                        ? Array.from(new Array(2)).map((item, idx) => (\r\n                              <Tab\r\n                                  key={idx}\r\n                                  className={classes.tab}\r\n                                  label={\r\n                                      <Skeleton\r\n                                          style={{ marginLeft: \".5rem\" }}\r\n                                          height={20}\r\n                                          width=\"50%\"\r\n                                      />\r\n                                  }\r\n                                  icon={\r\n                                      <Skeleton\r\n                                          variant=\"circle\"\r\n                                          height={30}\r\n                                          width={35}\r\n                                      />\r\n                                  }\r\n                              />\r\n                          ))\r\n                        : socialAccounts.map((socialAccount) => (\r\n                              <Tab\r\n                                  key={socialAccount._id}\r\n                                  className={classes.tab}\r\n                                  label={socialAccount.account.userName}\r\n                                  icon={<FontAwesomeIcon icon={faTwitter} />}\r\n                                  {...a11yProps(socialAccount._id)}\r\n                              />\r\n                          ))}\r\n\r\n                    <Tab label=\"Item One\" {...a11yProps(1)} />\r\n                    <Tab label=\"Item Two\" {...a11yProps(2)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            {socialAccounts.map((socialAccount) => (\r\n                <TabPanel\r\n                    value={socialAccount._id}\r\n                    key={socialAccount._id}\r\n                    index={socialAccount._id}\r\n                >\r\n                    <Stream /*socialAccount={socialAccount}*/ />\r\n                </TabPanel>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state: FixMeLater) {\r\n    return {\r\n        socialAccounts: state.socialAccounts,\r\n    };\r\n}\r\n\r\nfunction dispatchToProps(dispatch: FixMeLater) {\r\n    return {\r\n        getSocialAccounts: () => dispatch(getSocialAccounts()),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, dispatchToProps)(Index);\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\ConnectSocial\\ConnectSocialStep.tsx",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\store\\index.ts",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\store\\actions\\auth.ts",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Auth\\styles.ts",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Index\\styles.ts",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\store\\actions\\socialAccounts.ts",["197","198","199"],"import { Action, Dispatch } from \"redux\";\r\nimport {\r\n    LOAD_SOCIAL_ACCOUNTS,\r\n    GET_SOCIAL_ACCOUNT,\r\n    ADD_SOCIAL_ACCOUNT,\r\n    DELETE_SOCIAL_ACCOUNT,\r\n} from \"../actionTypes\";\r\nimport { apiCall } from \"../../services/api\";\r\nimport { FixMeLater } from \"../../types\";\r\n\r\nexport const getSocialAccounts = () => async (dispatch: Dispatch<Action>) => {\r\n    try {\r\n        let { accounts: socialAccounts }: FixMeLater = await apiCall(\r\n            \"get\",\r\n            \"/api/oauth/accounts/getStreams\"\r\n        );\r\n        dispatch({ type: LOAD_SOCIAL_ACCOUNTS, socialAccounts });\r\n    } catch (error) {\r\n        console.log(error.response);\r\n    }\r\n};\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\styles.ts",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\services\\socket.ts",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Auth\\AuthForm.tsx",["200","201","202"],"import React, { useRef, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    CircularProgress,\r\n    FormControlLabel,\r\n    Grid,\r\n} from \"@material-ui/core\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport { Form, useFormikContext } from \"formik\";\r\nimport Input from \"./Input\";\r\nimport CheckboxInput from \"./CheckboxInput\";\r\nimport useStyles from \"./styles\";\r\n\r\ninterface Props {\r\n    isSignup?: boolean;\r\n}\r\n\r\nconst AuthForm = ({ isSignup }: Props) => {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const { resetForm, isSubmitting } = useFormikContext() ?? {};\r\n    const [showPassword, setShowPassword] = useState<boolean>(false);\r\n\r\n    const handleShowPassword = () => {\r\n        setShowPassword((prevState) => !prevState);\r\n    };\r\n\r\n    history.listen(() => resetForm());\r\n\r\n    return (\r\n        <Form className={classes.form}>\r\n            <Grid container spacing={2}>\r\n                {isSignup && (\r\n                    <>\r\n                        <Input\r\n                            name=\"firstName\"\r\n                            label=\"First Name\"\r\n                            type=\"text\"\r\n                            autoFocus\r\n                            half\r\n                        />\r\n                        <Input name=\"lastName\" label=\"Last Name\" half />\r\n                    </>\r\n                )}\r\n                <Input name=\"email\" label=\"Email Address\" type=\"email\" />\r\n                <Input\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    handleShowPassword={handleShowPassword}\r\n                />\r\n                {isSignup && (\r\n                    <Input\r\n                        name=\"confirmPassword\"\r\n                        label=\"Repeat Password\"\r\n                        type=\"password\"\r\n                    />\r\n                )}\r\n            </Grid>\r\n            {!isSignup ? (\r\n                <Grid container justify=\"space-between\">\r\n                    <CheckboxInput\r\n                        color=\"primary\"\r\n                        name=\"rememberMe\"\r\n                        label=\"Remember Me\"\r\n                    />\r\n                    <Button\r\n                        component={Link}\r\n                        to=\"/forgot_password\"\r\n                        className={classes.linkButton}\r\n                    >\r\n                        Forgot Password\r\n                    </Button>\r\n                </Grid>\r\n            ) : (\r\n                <Grid container justify=\"flex-end\">\r\n                    <CheckboxInput\r\n                        color=\"primary\"\r\n                        name=\"agreeToTerms\"\r\n                        label={\r\n                            <span className={classes.label}>\r\n                                Agree to The{\" \"}\r\n                                <Link to=\"terms-and-privacy\">\r\n                                    Terms and privacy of service\r\n                                </Link>\r\n                            </span>\r\n                        }\r\n                        className={classes.remember}\r\n                    />\r\n                </Grid>\r\n            )}\r\n            <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n            >\r\n                {isSubmitting ? (\r\n                    <CircularProgress\r\n                        style={{ height: \"1.5rem\", width: \"1.5rem\" }}\r\n                        color=\"inherit\"\r\n                    />\r\n                ) : (\r\n                    <span>{isSignup ? \"Sign Up\" : \"Sign In\"}</span>\r\n                )}\r\n            </Button>\r\n            <Button\r\n                component={Link}\r\n                to={isSignup ? \"signin\" : \"signup\"}\r\n                className={classes.linkButton}\r\n            >\r\n                {isSignup\r\n                    ? \"Already have an account? Sign In\"\r\n                    : \"Don't have an account? Sign Up\"}\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default AuthForm;\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\containers\\OAuth.tsx",["203","204"],"import React, { Component } from \"react\";\r\nimport { apiCall } from \"../services/api\";\r\nimport { API_URL } from \"../services/config\";\r\nimport { connect } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { Action, Dispatch } from \"redux\";\r\nimport { FixMeLater } from \"../types\";\r\nimport { ADD_SOCIAL_ACCOUNT } from \"../store/actionTypes\";\r\n\r\ninterface IProps {\r\n    provider: FixMeLater;\r\n    socket: FixMeLater;\r\n    route: FixMeLater;\r\n    history: FixMeLater;\r\n    addSocialAccount: any;\r\n    // flash;\r\n}\r\n\r\nclass OAuth extends Component<FixMeLater, { disabled: boolean }> {\r\n    state = { disabled: false };\r\n    popup: FixMeLater;\r\n\r\n    checkPopup() {\r\n        const check = setInterval(() => {\r\n            const { popup } = this;\r\n            if (!popup || popup.closed || popup.closed === undefined) {\r\n                clearInterval(check);\r\n                this.setState({ disabled: false });\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    openPopup = () => {\r\n        const width = 600,\r\n            height = 600;\r\n        const left = window.innerWidth / 2 - width / 2;\r\n        const top = window.innerHeight / 2 - height / 2;\r\n\r\n        return window.open(\r\n            \"\",\r\n            \"\",\r\n            `toolbar=no, location=no, directories=no, status=no, menubar=no, \r\n            scrollbars=no, resizable=no, copyhistory=no, width=${width}, \r\n            height=${height}, top=${top}, left=${left}`\r\n        );\r\n    };\r\n\r\n    startAuth = () => {\r\n        const { provider, socket, route, history } = this.props;\r\n\r\n        socket.on(provider, (res: FixMeLater) => {\r\n            try {\r\n                if (route === \"\") {\r\n                    if (res.user === null)\r\n                        throw res.data || \"Something went wrong!\";\r\n                    this.props.addSocialAccount(res.socialAccounts);\r\n                    history.push(\"/dashboard\");\r\n                    localStorage.setItem(\"accessToken\", res.user.userTokens);\r\n                }\r\n                if (route === \"/link\") {\r\n                    // const { error, user } = res.LinkAccount;\r\n\r\n                    // if (error) throw error || \"Something went wrong!\";\r\n                    // flash(\"success\", \"Account connected sucessfully!\");\r\n                    history.push(\"/dashboard\");\r\n                }\r\n            } catch (error) {\r\n                // flash(\"error\", error);\r\n            } finally {\r\n                this.popup.close();\r\n                socket.off(provider);\r\n            }\r\n        });\r\n\r\n        if (!this.state.disabled) {\r\n            this.popup = this.openPopup();\r\n            console.log(socket);\r\n            Axios.defaults.headers.Authorization = localStorage.accessToken;\r\n            Axios.get(\r\n                `${API_URL}/api/oauth${route}/${provider}?${provider}SocketId=${socket.id}`\r\n            )\r\n                .then((data) => {\r\n                    this.popup.location = data.data.requestUrl;\r\n                })\r\n                .catch((err) => {});\r\n            this.checkPopup();\r\n            this.setState({ disabled: false });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ cursor: \"pointer\" }} onClick={this.startAuth}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action>) => ({\r\n    addSocialAccount: (socialAccount: FixMeLater) =>\r\n        dispatch({ type: ADD_SOCIAL_ACCOUNT, socialAccount }),\r\n});\r\n\r\nexport default connect(mapDispatchToProps)(OAuth);\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\Main.tsx",["205"],"import React, { useEffect } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"./AppBar\";\r\nimport { useStyles } from \"./styles/Layout.styles\";\r\nimport Drawer from \"./Drawer\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\ninterface IProps {\r\n    children: React.ReactNode;\r\n}\r\n\r\nfunction Main(props: IProps) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(true);\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleMobileOpen = () => {\r\n        setMobileOpen(true);\r\n    };\r\n\r\n    const handleMobileClose = () => {\r\n        setMobileOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                open={open}\r\n                mobileOpen={mobileOpen}\r\n                handleDrawerOpen={handleDrawerOpen}\r\n                handleMobileOpen={handleMobileOpen}\r\n            />\r\n            <Drawer\r\n                open={open}\r\n                mobileOpen={mobileOpen}\r\n                handleDrawerClose={handleDrawerClose}\r\n                handleMobileClose={handleMobileClose}\r\n                handleMobileOpen={handleMobileOpen}\r\n            />\r\n            <main className={classes.content}>\r\n                <div className={classes.toolbar} />\r\n                {props.children}\r\n            </main>\r\n            <Sidebar />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\Tabs\\TabPanel.tsx",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\AddProfileBar\\AddProfileBar.tsx",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\services\\config.ts",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Auth\\Input.tsx",["206","207"],"import React, { ChangeEvent } from \"react\";\r\nimport { Grid, TextField, InputAdornment, IconButton } from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { ErrorMessage, useField } from \"formik\";\r\n\r\ninterface Props {\r\n    name: string;\r\n    label: string;\r\n    half?: boolean;\r\n    type?: string;\r\n    autoFocus?: boolean;\r\n    handleShowPassword?: () => void;\r\n}\r\n\r\nconst Input = ({\r\n    label,\r\n    half,\r\n    type,\r\n    autoFocus,\r\n    handleShowPassword,\r\n    ...props\r\n}: Props) => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <Grid item xs={12} sm={half ? 6 : 12}>\r\n            <TextField\r\n                error={!!meta.touched && !!meta.error}\r\n                type={type}\r\n                label={label}\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                autoFocus={autoFocus}\r\n                helperText={meta.error}\r\n                {...field}\r\n                {...props}\r\n                InputProps={\r\n                    field.name === \"password\"\r\n                        ? {\r\n                              endAdornment: (\r\n                                  <InputAdornment position=\"end\">\r\n                                      <IconButton onClick={handleShowPassword}>\r\n                                          {type === \"password\" ? (\r\n                                              <Visibility />\r\n                                          ) : (\r\n                                              <VisibilityOff />\r\n                                          )}\r\n                                      </IconButton>\r\n                                  </InputAdornment>\r\n                              ),\r\n                          }\r\n                        : undefined\r\n                }\r\n            />\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Auth\\CheckboxInput.tsx",["208"],"import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport {\r\n    Checkbox,\r\n    CheckboxProps,\r\n    FormControlLabel,\r\n    withStyles,\r\n} from \"@material-ui/core\";\r\n\r\ninterface Props {\r\n    name: string;\r\n    label: string | JSX.Element;\r\n    color: \"primary\" | \"secondary\" | \"default\" | undefined;\r\n    className?: string;\r\n}\r\n\r\nconst CustomCheckbox = withStyles({\r\n    root: {\r\n        color: \"#2F80ED\",\r\n        \"&$checked\": {\r\n            color: \"2971cf\",\r\n        },\r\n    },\r\n    checked: {},\r\n})((props: CheckboxProps) => <Checkbox color=\"default\" {...props} />);\r\n\r\nconst CheckboxInput = ({ label, color, ...props }: Props): JSX.Element => {\r\n    const [field, meta] = useField(props);\r\n    return (\r\n        <FormControlLabel\r\n            // className={classes.remember}\r\n            control={\r\n                <CustomCheckbox\r\n                    checked={field.value}\r\n                    // color=\"primary\"\r\n                    {...field}\r\n                    {...props}\r\n                />\r\n            }\r\n            label={label}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CheckboxInput;\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\AddProfileBar\\style.ts",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\styles\\Layout.styles.ts",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\AppBar.tsx",["209"],"import React, { createContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport clsx from \"clsx\";\r\nimport AppNavBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Hidden } from \"@material-ui/core\";\r\nimport { faBars, faBell } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useStyles } from \"./styles/Layout.styles\";\r\nimport StyledMenu from \"./StyledMenu\";\r\nimport { FixMeLater } from \"../../types\";\r\n\r\ninterface IProps {\r\n    open: boolean;\r\n    mobileOpen: boolean;\r\n    handleMobileOpen: () => void;\r\n}\r\n\r\nconst ToolbarMain = (props: IProps) => {\r\n    const { open, handleMobileOpen, mobileOpen } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.appToolbarMain, {\r\n                [classes.appToolbar]: open,\r\n            })}\r\n        >\r\n            <Hidden mdUp implementation=\"js\">\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleMobileOpen}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, {\r\n                        [classes.hide]: mobileOpen,\r\n                    })}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n            </Hidden>\r\n            <div className={classes.search}>\r\n                <InputBase\r\n                    placeholder=\"Search…\"\r\n                    classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                    }}\r\n                    inputProps={{ \"aria-label\": \"search\" }}\r\n                />\r\n                <div className={classes.searchIcon}>\r\n                    <SearchIcon />\r\n                </div>\r\n            </div>\r\n            <div className={classes.rightContent}>\r\n                <StyledMenu className={classes.iconButton} />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={classes.iconButton}\r\n                    disableElevation\r\n                >\r\n                    <FontAwesomeIcon icon={faBell} size=\"2x\" />\r\n                </Button>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    className={classes.iconButton}\r\n                    disableElevation\r\n                >\r\n                    <FontAwesomeIcon icon={faBars} size=\"2x\" />\r\n                </Button>\r\n            </div>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nexport const userContext = createContext({});\r\n\r\ninterface IAppBarProps {\r\n    open: boolean;\r\n    mobileOpen: boolean;\r\n    handleDrawerOpen: () => void;\r\n    handleMobileOpen: () => void;\r\n    user: FixMeLater;\r\n}\r\n\r\nconst AppBar = (props: IAppBarProps) => {\r\n    const { open, handleMobileOpen, mobileOpen, user } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <userContext.Provider value={{ username: \"Santos Bright\" }}>\r\n            <Hidden smDown implementation=\"js\">\r\n                <AppNavBar\r\n                    position=\"fixed\"\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <ToolbarMain\r\n                        open={open}\r\n                        // handleDrawerOpen={handleDrawerOpen}\r\n                        mobileOpen={mobileOpen}\r\n                        handleMobileOpen={handleMobileOpen}\r\n                    />\r\n                </AppNavBar>\r\n            </Hidden>\r\n            <Hidden mdUp implementation=\"js\">\r\n                <AppNavBar position=\"fixed\" className={clsx(classes.appBar)}>\r\n                    <ToolbarMain\r\n                        open={open}\r\n                        mobileOpen={mobileOpen}\r\n                        handleMobileOpen={handleMobileOpen}\r\n                    />\r\n                </AppNavBar>\r\n            </Hidden>\r\n        </userContext.Provider>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: FixMeLater) => ({\r\n    user: state.auth.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\Sidebar.tsx",["210","211","212","213","214"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useStyles } from \"./styles/Layout.styles\";\r\n\r\nconst Sidebar = () => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    return (\r\n        <Drawer\r\n            className={classes.sidebar}\r\n            variant=\"permanent\"\r\n            classes={{\r\n                paper: classes.sidebarDrawerPaper,\r\n            }}\r\n            anchor=\"right\"\r\n        >\r\n            <Toolbar />\r\n            <div className={classes.drawerContainer}>\r\n                <List>\r\n                    <ListItem button>\r\n                        <ListItemIcon className={classes.sideListItemIcon}>\r\n                            <FontAwesomeIcon icon={faEdit} />\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                    <ListItem button>\r\n                        <ListItemIcon className={classes.sideListItemIcon}>\r\n                            <FontAwesomeIcon icon={faPlusCircle} />\r\n                        </ListItemIcon>\r\n                    </ListItem>\r\n                </List>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\Drawer.tsx",["215","216"],"import React from \"react\";\r\nimport { Hidden } from \"@material-ui/core\";\r\nimport PermanentDrawer from \"./PermanentDrawer\";\r\nimport SwipeDrawer from \"./SwipeDrawer\";\r\nimport { boolean } from \"yup\";\r\n\r\ninterface IProps {\r\n    open: boolean;\r\n    handleDrawerClose: () => void;\r\n    mobileOpen: boolean;\r\n    handleMobileClose: () => void;\r\n    handleMobileOpen: () => void;\r\n}\r\n\r\nconst DrawerMain = (props: IProps) => {\r\n    const {\r\n        open,\r\n        handleDrawerClose,\r\n        mobileOpen,\r\n        handleMobileClose,\r\n        handleMobileOpen,\r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n            <Hidden smDown implementation=\"js\">\r\n                <PermanentDrawer\r\n                    open={true}\r\n                    handleDrawerClose={handleDrawerClose}\r\n                />\r\n            </Hidden>\r\n            <Hidden mdUp implementation=\"js\">\r\n                <SwipeDrawer\r\n                    mobileOpen={mobileOpen}\r\n                    handleMobileClose={handleMobileClose}\r\n                    handleMobileOpen={handleMobileOpen}\r\n                />\r\n            </Hidden>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DrawerMain;\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\store\\reducers\\index.ts",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\styles\\constants.ts",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\StyledMenu.tsx",["217"],"import React, { useContext } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Avatar, makeStyles } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown, faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport avatar from \"../../../images/avatar_test.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { userContext } from \"./AppBar\";\r\nimport { MenuProps } from \"material-ui\";\r\n\r\nconst styles = makeStyles((theme) => ({\r\n    avatar: {\r\n        width: theme.spacing(2),\r\n        height: theme.spacing(2),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    arrow: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    listItemText: {\r\n        fontSize: \"1.2rem\",\r\n        color: \"#000 !important\",\r\n        \"&:hover\": {\r\n            textDecoration: \"none !important\",\r\n        },\r\n    },\r\n    listIcon: {},\r\n}));\r\n\r\ninterface IStyleMenuProps extends MenuProps {\r\n    className?: string;\r\n    anchorEl: any;\r\n    keepMounted: boolean;\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n        border: \"1px solid rgba(0, 0, 0, .7)\",\r\n        borderRadius: 0,\r\n        top: \"37px !important\",\r\n        borderTop: \"#233862 4px solid\",\r\n        maxHeight: \"none !important\",\r\n        minWidth: \"180px\",\r\n        \"& ul\": {\r\n            paddingTop: \"0 !important\",\r\n            paddingBottom: \"0 !important\",\r\n        },\r\n    },\r\n})((props: IStyleMenuProps) => (\r\n    <Menu\r\n        open={false} //fx later\r\n        elevation={0}\r\n        // style={{ top: \"32px\" }}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n        }}\r\n        transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"right\",\r\n        }}\r\n        // {...props}\r\n    />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n        // fontSize: \"2rem\",\r\n        \"&:focus\": {\r\n            backgroundColor: theme.palette.primary.main,\r\n            \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n                color: theme.palette.common.white,\r\n            },\r\n        },\r\n        \"& span\": {\r\n            fontSize: \"1.2rem\",\r\n        },\r\n        \"& svg\": {\r\n            marginLeft: \"auto\",\r\n        },\r\n    },\r\n}))(MenuItem);\r\n\r\nexport default function CustomizedMenus(props: { className: string }) {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const classes = styles();\r\n    const user: any = useContext(userContext);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                aria-controls=\"customized-menu\"\r\n                aria-haspopup=\"true\"\r\n                variant=\"contained\"\r\n                onClick={handleClick}\r\n                style={{\r\n                    textTransform: \"capitalize\",\r\n                    color: \"black\",\r\n                    fontWeight: \"bold\",\r\n                }}\r\n                {...props}\r\n            >\r\n                <Avatar\r\n                    className={classes.avatar}\r\n                    alt={user.username}\r\n                    style={{\r\n                        backgroundColor: \"#2F80ED\",\r\n                        fontWeight: \"lighter\",\r\n                    }}\r\n                    src={user.profileImg ? user.profileImg : null}\r\n                >\r\n                    {(user.username as string)[0].toUpperCase()}\r\n                </Avatar>\r\n                {user.username || \"Santos Bright\"}\r\n                <FontAwesomeIcon icon={faAngleDown} className={classes.arrow} />\r\n            </Button>\r\n            <StyledMenu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <StyledMenuItem>\r\n                    <ListItemText\r\n                        className={classes.listItemText}\r\n                        primary=\"Profile\"\r\n                    />\r\n                </StyledMenuItem>\r\n                <StyledMenuItem>\r\n                    <ListItemText\r\n                        className={classes.listItemText}\r\n                        primary=\"Settings\"\r\n                    />\r\n                    {/* <ListItemIcon className={classes.listIcon}>\r\n                        <DraftsIcon fontSize=\"small\" />\r\n                    </ListItemIcon> */}\r\n                </StyledMenuItem>\r\n                <StyledMenuItem>\r\n                    <ListItemText\r\n                        className={classes.listItemText}\r\n                        primary=\"Help\"\r\n                    />\r\n                    {/* <ListItemIcon className={classes.listIcon}>\r\n                        <InboxIcon fontSize=\"small\" />\r\n                    </ListItemIcon> */}\r\n                </StyledMenuItem>\r\n                <Link\r\n                    to=\"/logout\"\r\n                    style={{ textDecoration: \"none !important\" }}\r\n                >\r\n                    <StyledMenuItem>\r\n                        <ListItemText\r\n                            className={classes.listItemText}\r\n                            primary=\"Log Out\"\r\n                        />\r\n                        <ListItemIcon className={classes.listIcon}>\r\n                            <FontAwesomeIcon size=\"2x\" icon={faSignOutAlt} />\r\n                        </ListItemIcon>\r\n                    </StyledMenuItem>\r\n                </Link>\r\n            </StyledMenu>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\SwipeDrawer.tsx",["218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport ViewStreamIcon from \"@material-ui/icons/ViewStream\";\r\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useStyles } from \"./styles/Layout.styles\";\r\nimport logo from \"../../../images/logo/logo.png\";\r\nimport mainLogo from \"../../../images/logo/main-logo.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faInbox } from \"@fortawesome/free-solid-svg-icons\";\r\nimport DrawerContent from \"./DrawerContent\";\r\nimport { SwipeableDrawer } from \"@material-ui/core\";\r\nimport { FixMeLater } from \"../../types\";\r\n\r\ninterface IProps {\r\n    open?: boolean;\r\n    mobileOpen: boolean;\r\n    handleMobileOpen: () => void;\r\n    handleMobileClose: () => void;\r\n}\r\n\r\nconst SwipeDrawer = (props: IProps) => {\r\n    const iOS =\r\n        (process as FixMeLater).browser &&\r\n        /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { open, mobileOpen, handleMobileOpen, handleMobileClose } = props;\r\n    return (\r\n        <SwipeableDrawer\r\n            anchor=\"left\"\r\n            disableBackdropTransition={!iOS}\r\n            disableDiscovery={iOS}\r\n            open={mobileOpen}\r\n            onClose={handleMobileClose}\r\n            onOpen={handleMobileOpen}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: mobileOpen,\r\n                    [classes.drawerClose]: !mobileOpen,\r\n                }),\r\n            }}\r\n        >\r\n            <div className={classes.toolbar}>\r\n                <IconButton\r\n                    className={classes.drawerToggle}\r\n                    onClick={handleMobileClose}\r\n                >\r\n                    {theme.direction === \"rtl\" ? (\r\n                        <ChevronRightIcon />\r\n                    ) : (\r\n                        <ChevronLeftIcon />\r\n                    )}\r\n                </IconButton>\r\n            </div>\r\n            <DrawerContent />\r\n        </SwipeableDrawer>\r\n    );\r\n};\r\n\r\nexport default SwipeDrawer;\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\store\\reducers\\socialAccounts.ts",["235"],"import {\r\n    ADD_SOCIAL_ACCOUNT,\r\n    DELETE_SOCIAL_ACCOUNT,\r\n    LOAD_SOCIAL_ACCOUNTS,\r\n    GET_SOCIAL_ACCOUNT,\r\n} from \"../actionTypes\";\r\nimport { FixMeLater } from \"../../types\";\r\n\r\nexport default (state = [], action: FixMeLater) => {\r\n    switch (action.type) {\r\n        case LOAD_SOCIAL_ACCOUNTS:\r\n            return [...action.socialAccounts];\r\n\r\n        case ADD_SOCIAL_ACCOUNT:\r\n            return [...state, action.socialAccount];\r\n        case GET_SOCIAL_ACCOUNT:\r\n            return state.filter(\r\n                (account: FixMeLater) => account.id === action.id\r\n            );\r\n        case DELETE_SOCIAL_ACCOUNT:\r\n            return state.filter(\r\n                (account: FixMeLater) => account.id !== action.id\r\n            );\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\store\\reducers\\auth.ts",["236"],"import { AUTH, LOGOUT } from \"../actionTypes\";\r\n\r\nconst DEFAULT_STATE = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n};\r\n\r\ninterface IState {\r\n    isAuthenticated: boolean;\r\n    user: {};\r\n}\r\n\r\nexport default (state: IState = DEFAULT_STATE, action: any) => {\r\n    switch (action.type) {\r\n        case AUTH:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !!Object.keys(action.user).length,\r\n                user: action?.user,\r\n            };\r\n        case LOGOUT:\r\n            localStorage.clear();\r\n            return { ...state, user: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// export default authReducer;\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\DrawerContent.tsx",["237","238","239","240","241","242","243","244"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport ViewStreamIcon from \"@material-ui/icons/ViewStream\";\r\nimport TelegramIcon from \"@material-ui/icons/Telegram\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useStyles } from \"./styles/Layout.styles\";\r\nimport logo from \"../../assets/icons/logo-text.svg\";\r\nimport mainLogo from \"../../../images/logo/main-logo.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faInbox } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface IProps {\r\n    open?: boolean;\r\n}\r\n\r\nconst DrawerContent = (props: IProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { open } = props;\r\n\r\n    return (\r\n        <>\r\n            <Divider />\r\n            <div className={classes.logo}>\r\n                <NavLink to=\"/\">\r\n                    <img src={logo} alt=\"buzzroom logo\" width=\"150\" />\r\n                </NavLink>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                <NavLink\r\n                    exact\r\n                    to=\"/\"\r\n                    activeClassName={classes.activeNavLink}\r\n                    className={classes.navLink}\r\n                >\r\n                    <ListItem button>\r\n                        <ListItemIcon className={classes.listIcon}>\r\n                            <InboxIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Dash Inbox\"\r\n                            className={classes.listIconText}\r\n                        />\r\n                    </ListItem>\r\n                </NavLink>\r\n                <NavLink\r\n                    to=\"/social-inbox\"\r\n                    activeClassName={classes.activeNavLink}\r\n                    className={classes.navLink}\r\n                >\r\n                    <ListItem button>\r\n                        <ListItemIcon className={classes.listIcon}>\r\n                            <FontAwesomeIcon icon={faInbox} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Social Inbox\"\r\n                            className={classes.listIconText}\r\n                        />\r\n                    </ListItem>\r\n                </NavLink>\r\n                <NavLink\r\n                    to=\"/streams\"\r\n                    activeClassName={classes.activeNavLink}\r\n                    className={classes.navLink}\r\n                >\r\n                    <ListItem button>\r\n                        <ListItemIcon className={classes.listIcon}>\r\n                            <ViewStreamIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Streams\"\r\n                            className={classes.listIconText}\r\n                        />\r\n                    </ListItem>\r\n                </NavLink>\r\n                <NavLink\r\n                    to=\"/posts\"\r\n                    activeClassName={classes.activeNavLink}\r\n                    className={classes.navLink}\r\n                >\r\n                    <ListItem button>\r\n                        <ListItemIcon className={classes.listIcon}>\r\n                            <InboxIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Posts\"\r\n                            className={classes.listIconText}\r\n                        />\r\n                    </ListItem>\r\n                </NavLink>\r\n                <NavLink\r\n                    to=\"/publisher\"\r\n                    activeClassName={classes.activeNavLink}\r\n                    className={classes.navLink}\r\n                >\r\n                    <ListItem button>\r\n                        <ListItemIcon className={classes.listIcon}>\r\n                            <TelegramIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Publisher\"\r\n                            className={classes.listIconText}\r\n                        />\r\n                    </ListItem>\r\n                </NavLink>\r\n                <NavLink\r\n                    to=\"/analytics\"\r\n                    activeClassName={classes.activeNavLink}\r\n                    className={classes.navLink}\r\n                >\r\n                    <ListItem button>\r\n                        <ListItemIcon className={classes.listIcon}>\r\n                            <BarChartIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Analytics\"\r\n                            className={classes.listIconText}\r\n                        />\r\n                    </ListItem>\r\n                </NavLink>\r\n                <NavLink\r\n                    to=\"/post-manager\"\r\n                    activeClassName={classes.activeNavLink}\r\n                    className={classes.navLink}\r\n                >\r\n                    <ListItem button>\r\n                        <ListItemIcon className={classes.listIcon}>\r\n                            <FontAwesomeIcon icon={faEdit} />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                            primary=\"Post Manager\"\r\n                            className={classes.listIconText}\r\n                        />\r\n                    </ListItem>\r\n                </NavLink>\r\n            </List>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DrawerContent;\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Layout\\PermanentDrawer.tsx",["245","246"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { useStyles } from \"./styles/Layout.styles\";\r\nimport DrawerContent from \"./DrawerContent\";\r\n\r\ninterface IProps {\r\n    open: boolean;\r\n    handleDrawerClose: () => void;\r\n}\r\n\r\nconst PermanentDrawer = (props: IProps) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const { open, handleDrawerClose } = props;\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                }),\r\n            }}\r\n        >\r\n            <div className={classes.toolbar}>\r\n                {/* <IconButton\r\n                    className={classes.drawerToggle}\r\n                    onClick={handleDrawerClose}\r\n                >\r\n                    {theme.direction === \"rtl\" ? (\r\n                        <ChevronRightIcon />\r\n                    ) : (\r\n                        <ChevronLeftIcon />\r\n                    )}\r\n                </IconButton> */}\r\n            </div>\r\n\r\n            <DrawerContent open={open} />\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default PermanentDrawer;\r\n","C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\Stream\\Stream.tsx",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\StreamNavs\\TwitterStreamNav.tsx",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\StreamNavs\\styles\\StreamNav.styles.ts",[],"C:\\Users\\Dream2works\\Documents\\Dreamworks Project\\buzzroom\\Buzzroom-Front-End-2.0\\src\\components\\Streams\\constants.ts",[],{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":14,"column":8,"nodeType":"253","messageId":"254","endLine":14,"endColumn":16},{"ruleId":"251","severity":1,"message":"255","line":12,"column":10,"nodeType":"253","messageId":"254","endLine":12,"endColumn":21},{"ruleId":"251","severity":1,"message":"256","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":19},{"ruleId":"251","severity":1,"message":"257","line":8,"column":19,"nodeType":"253","messageId":"254","endLine":8,"endColumn":30},{"ruleId":"258","severity":1,"message":"259","line":35,"column":8,"nodeType":"260","endLine":35,"endColumn":10,"suggestions":"261"},{"ruleId":"251","severity":1,"message":"262","line":4,"column":5,"nodeType":"253","messageId":"254","endLine":4,"endColumn":23},{"ruleId":"251","severity":1,"message":"263","line":5,"column":5,"nodeType":"253","messageId":"254","endLine":5,"endColumn":23},{"ruleId":"251","severity":1,"message":"264","line":6,"column":5,"nodeType":"253","messageId":"254","endLine":6,"endColumn":26},{"ruleId":"251","severity":1,"message":"265","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":23},{"ruleId":"251","severity":1,"message":"266","line":5,"column":5,"nodeType":"253","messageId":"254","endLine":5,"endColumn":21},{"ruleId":"251","severity":1,"message":"267","line":9,"column":10,"nodeType":"253","messageId":"254","endLine":9,"endColumn":18},{"ruleId":"251","severity":1,"message":"268","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":17},{"ruleId":"251","severity":1,"message":"269","line":10,"column":11,"nodeType":"253","messageId":"254","endLine":10,"endColumn":17},{"ruleId":"251","severity":1,"message":"270","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":26},{"ruleId":"251","severity":1,"message":"271","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":28},{"ruleId":"251","severity":1,"message":"272","line":4,"column":10,"nodeType":"253","messageId":"254","endLine":4,"endColumn":22},{"ruleId":"251","severity":1,"message":"273","line":28,"column":19,"nodeType":"253","messageId":"254","endLine":28,"endColumn":23},{"ruleId":"251","severity":1,"message":"274","line":91,"column":49,"nodeType":"253","messageId":"254","endLine":91,"endColumn":53},{"ruleId":"251","severity":1,"message":"275","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":12},{"ruleId":"251","severity":1,"message":"276","line":6,"column":8,"nodeType":"253","messageId":"254","endLine":6,"endColumn":15},{"ruleId":"251","severity":1,"message":"277","line":10,"column":8,"nodeType":"253","messageId":"254","endLine":10,"endColumn":20},{"ruleId":"251","severity":1,"message":"278","line":11,"column":8,"nodeType":"253","messageId":"254","endLine":11,"endColumn":17},{"ruleId":"251","severity":1,"message":"279","line":18,"column":11,"nodeType":"253","messageId":"254","endLine":18,"endColumn":16},{"ruleId":"251","severity":1,"message":"280","line":5,"column":10,"nodeType":"253","messageId":"254","endLine":5,"endColumn":17},{"ruleId":"251","severity":1,"message":"281","line":17,"column":9,"nodeType":"253","messageId":"254","endLine":17,"endColumn":13},{"ruleId":"251","severity":1,"message":"282","line":11,"column":8,"nodeType":"253","messageId":"254","endLine":11,"endColumn":14},{"ruleId":"251","severity":1,"message":"283","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":14},{"ruleId":"251","severity":1,"message":"284","line":5,"column":8,"nodeType":"253","messageId":"254","endLine":5,"endColumn":12},{"ruleId":"251","severity":1,"message":"276","line":6,"column":8,"nodeType":"253","messageId":"254","endLine":6,"endColumn":15},{"ruleId":"251","severity":1,"message":"285","line":10,"column":8,"nodeType":"253","messageId":"254","endLine":10,"endColumn":16},{"ruleId":"251","severity":1,"message":"286","line":11,"column":8,"nodeType":"253","messageId":"254","endLine":11,"endColumn":20},{"ruleId":"251","severity":1,"message":"277","line":12,"column":8,"nodeType":"253","messageId":"254","endLine":12,"endColumn":20},{"ruleId":"251","severity":1,"message":"278","line":13,"column":8,"nodeType":"253","messageId":"254","endLine":13,"endColumn":17},{"ruleId":"251","severity":1,"message":"287","line":14,"column":8,"nodeType":"253","messageId":"254","endLine":14,"endColumn":22},{"ruleId":"251","severity":1,"message":"288","line":15,"column":8,"nodeType":"253","messageId":"254","endLine":15,"endColumn":20},{"ruleId":"251","severity":1,"message":"289","line":16,"column":8,"nodeType":"253","messageId":"254","endLine":16,"endColumn":20},{"ruleId":"251","severity":1,"message":"290","line":17,"column":10,"nodeType":"253","messageId":"254","endLine":17,"endColumn":17},{"ruleId":"251","severity":1,"message":"291","line":19,"column":8,"nodeType":"253","messageId":"254","endLine":19,"endColumn":12},{"ruleId":"251","severity":1,"message":"292","line":20,"column":8,"nodeType":"253","messageId":"254","endLine":20,"endColumn":16},{"ruleId":"251","severity":1,"message":"293","line":21,"column":10,"nodeType":"253","messageId":"254","endLine":21,"endColumn":25},{"ruleId":"251","severity":1,"message":"294","line":22,"column":10,"nodeType":"253","messageId":"254","endLine":22,"endColumn":16},{"ruleId":"251","severity":1,"message":"295","line":22,"column":18,"nodeType":"253","messageId":"254","endLine":22,"endColumn":25},{"ruleId":"251","severity":1,"message":"281","line":40,"column":13,"nodeType":"253","messageId":"254","endLine":40,"endColumn":17},{"ruleId":"296","severity":1,"message":"297","line":9,"column":1,"nodeType":"298","endLine":27,"endColumn":3},{"ruleId":"296","severity":1,"message":"297","line":13,"column":1,"nodeType":"298","endLine":27,"endColumn":3},{"ruleId":"251","severity":1,"message":"275","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":12},{"ruleId":"251","severity":1,"message":"283","line":4,"column":8,"nodeType":"253","messageId":"254","endLine":4,"endColumn":14},{"ruleId":"251","severity":1,"message":"299","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":18},{"ruleId":"251","severity":1,"message":"300","line":8,"column":8,"nodeType":"253","messageId":"254","endLine":8,"endColumn":23},{"ruleId":"251","severity":1,"message":"301","line":9,"column":8,"nodeType":"253","messageId":"254","endLine":9,"endColumn":24},{"ruleId":"251","severity":1,"message":"292","line":20,"column":8,"nodeType":"253","messageId":"254","endLine":20,"endColumn":16},{"ruleId":"251","severity":1,"message":"279","line":30,"column":11,"nodeType":"253","messageId":"254","endLine":30,"endColumn":16},{"ruleId":"251","severity":1,"message":"281","line":31,"column":13,"nodeType":"253","messageId":"254","endLine":31,"endColumn":17},{"ruleId":"251","severity":1,"message":"279","line":15,"column":11,"nodeType":"253","messageId":"254","endLine":15,"endColumn":16},{"ruleId":"251","severity":1,"message":"302","line":16,"column":19,"nodeType":"253","messageId":"254","endLine":16,"endColumn":36},"no-native-reassign",["303"],"no-negated-in-lhs",["304"],"@typescript-eslint/no-unused-vars","'withAuth' is defined but never used.","Identifier","unusedVar","'ChevronLeft' is defined but never used.","'CssBaseline' is defined but never used.","'useDispatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSocialAccounts'. Either include it or remove the dependency array. If 'getSocialAccounts' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["305"],"'GET_SOCIAL_ACCOUNT' is defined but never used.","'ADD_SOCIAL_ACCOUNT' is defined but never used.","'DELETE_SOCIAL_ACCOUNT' is defined but never used.","'useRef' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'apiCall' is defined but never used.","'IProps' is defined but never used.","'useEffect' is defined but never used.","'ChangeEvent' is defined but never used.","'ErrorMessage' is defined but never used.","'meta' is assigned a value but never used.","'user' is assigned a value but never used.","'clsx' is defined but never used.","'Divider' is defined but never used.","'ListItemText' is defined but never used.","'InboxIcon' is defined but never used.","'theme' is assigned a value but never used.","'boolean' is defined but never used.","'open' is assigned a value but never used.","'avatar' is defined but never used.","'Drawer' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'ListItemIcon' is defined but never used.","'ViewStreamIcon' is defined but never used.","'TelegramIcon' is defined but never used.","'BarChartIcon' is defined but never used.","'NavLink' is defined but never used.","'logo' is defined but never used.","'mainLogo' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faEdit' is defined but never used.","'faInbox' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'IconButton' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'handleDrawerClose' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"306","fix":"307"},"Update the dependencies array to be: [getSocialAccounts]",{"range":"308","text":"309"},[1278,1280],"[getSocialAccounts]"]